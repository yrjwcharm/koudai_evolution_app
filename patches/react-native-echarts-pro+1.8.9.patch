diff --git a/node_modules/react-native-echarts-pro/index.d.ts b/node_modules/react-native-echarts-pro/index.d.ts
index c53e08d..e45a1b2 100644
--- a/node_modules/react-native-echarts-pro/index.d.ts
+++ b/node_modules/react-native-echarts-pro/index.d.ts
@@ -12,7 +12,8 @@ declare function RNEChartsPro(props: {
   formatterVariable?: object;
   eventActions?:object;
   legendSelectChanged?(result: string);
-  onDataZoom?(result: string);
+  onDataZoom?(result: object,option:object);
+  onFinished?();
   onPress?(result: string);
 }): JSX.Element;
 
diff --git a/node_modules/react-native-echarts-pro/index.js b/node_modules/react-native-echarts-pro/index.js
index e1e5f49..57deb32 100644
--- a/node_modules/react-native-echarts-pro/index.js
+++ b/node_modules/react-native-echarts-pro/index.js
@@ -19,6 +19,31 @@ function APP(props, ref) {
     dispatchAction(action) {
       chartRef.current.dispatchAction(action);
     },
+    showLoading(opt={text: 'loading',
+      color: '#0051CC',
+      textColor: '#121D3A',
+      maskColor: 'rgba(255, 255, 255, 0.8)',
+      zlevel: 0,
+      // 字体大小。从 `v4.8.0` 开始支持。
+      fontSize: 12,
+      // 是否显示旋转动画（spinner）。从 `v4.8.0` 开始支持。
+      showSpinner: true,
+      // 旋转动画（spinner）的半径。从 `v4.8.0` 开始支持。
+      spinnerRadius: 10,
+      // 旋转动画（spinner）的线宽。从 `v4.8.0` 开始支持。
+      lineWidth: 5,
+      // 字体粗细。从 `v5.0.1` 开始支持。
+      fontWeight: 'normal',
+      // 字体风格。从 `v5.0.1` 开始支持。
+      fontStyle: 'normal',
+      // 字体系列。从 `v5.0.1` 开始支持。
+      fontFamily: 'sans-serif'
+    }){
+      chartRef.current.showLoading(opt);
+    },
+    hideLoading() {
+      chartRef.current.hideLoading();
+    },
     /**
      * Get echarts instance support function.
      * @param {string} functionName
diff --git a/node_modules/react-native-echarts-pro/src/components/Echarts/index.js b/node_modules/react-native-echarts-pro/src/components/Echarts/index.js
index 3014574..a35713b 100644
--- a/node_modules/react-native-echarts-pro/src/components/Echarts/index.js
+++ b/node_modules/react-native-echarts-pro/src/components/Echarts/index.js
@@ -43,6 +43,17 @@ function Echarts(props, ref) {
         JSON.stringify({ type: "dispatchAction", action })
       );
     },
+    showLoading(opt){
+      eChartRef.current?.postMessage(JSON.stringify({
+        type:'showLoading',
+        opt
+      }))
+    },
+    hideLoading(){
+      eChartRef.current?.postMessage(JSON.stringify({
+        type:'hideLoading'
+      }))
+    },
     /**
      * Get echarts instance support function.
      * @param {string} functionName
@@ -101,8 +112,10 @@ function Echarts(props, ref) {
     const echartsData = JSON.parse(event.nativeEvent.data);
     // 判断监听类型
     if (echartsData.type === "datazoom") {
-      props.onDataZoom?.();
-    } else if (echartsData.type === "legendselectchanged") {
+      props.onDataZoom?.(echartsData.params, echartsData.option);
+    } else if(echartsData.type==='finished'){
+      props.onFinished?.();
+    }else if (echartsData.type === "legendselectchanged") {
       props.legendSelectChanged?.(echartsData.name);
     } else if (echartsData.type === "tooltipEvent") {
       props.tooltipEvent?.(echartsData.params);
diff --git a/node_modules/react-native-echarts-pro/src/components/Echarts/renderChart.js b/node_modules/react-native-echarts-pro/src/components/Echarts/renderChart.js
index d232268..8f4ad2c 100644
--- a/node_modules/react-native-echarts-pro/src/components/Echarts/renderChart.js
+++ b/node_modules/react-native-echarts-pro/src/components/Echarts/renderChart.js
@@ -50,7 +50,10 @@ export default function renderChart(props) {
       window.ReactNativeWebView.postMessage(JSON.stringify(clickParams));
     });
     myChart.on('dataZoom', (params)=>{
-        window.ReactNativeWebView.postMessage(JSON.stringify({type:params.type}));
+        window.ReactNativeWebView.postMessage(JSON.stringify({type:params.type,params,option:myChart.getOption()}));
+    });
+    myChart.on('finished',()=>{
+        window.ReactNativeWebView.postMessage(JSON.stringify({type:'finished'}));
     });
     myChart.on('legendselectchanged', (params)=>{
         window.ReactNativeWebView.postMessage(JSON.stringify({type: params.type,name:params.name}));
@@ -93,6 +96,12 @@ export default function renderChart(props) {
           if (option.type === "dispatchAction") {
             dispatchAction(option.action);
           }
+           if(option.type==='showLoading'){
+            myChart.showLoading(option.opt);
+            }
+            if(option.type=='hideLoading'){
+                myChart.hideLoading();
+            }
           // 获取实例进行操作
           if (option.type === "getInstance") {
             const result = myChart[option.functionName](option.params);
@@ -115,6 +124,12 @@ export default function renderChart(props) {
         if(option.type === 'dispatchAction'){
           dispatchAction(option.action)
         }
+        if(option.type==='showLoading'){
+            myChart.showLoading(option.opt);
+        }
+        if(option.type=='hideLoading'){
+            myChart.hideLoading();
+        }
         // 获取实例进行操作
         if(option.type === 'getInstance'){
           const result = myChart[option.functionName](option.params)
