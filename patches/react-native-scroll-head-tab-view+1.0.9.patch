diff --git a/node_modules/react-native-scroll-head-tab-view/ScrollTabView.tsx b/node_modules/react-native-scroll-head-tab-view/ScrollTabView.tsx
index c993477..77748ee 100644
--- a/node_modules/react-native-scroll-head-tab-view/ScrollTabView.tsx
+++ b/node_modules/react-native-scroll-head-tab-view/ScrollTabView.tsx
@@ -25,6 +25,7 @@ interface Props {
     onContentScroll?: (o: Animated.value) => void; //tab容器滑动改变offsetY值，触发该事件
     renderTabBar?: (p: any) => React.ReactElement;
     renderScrollHeader?: (p: any) => React.ReactElement;
+    renderScrollHeaderBg?: object;
     insetValue?: number; // 状态栏的高度，也就是TabBar距离顶部状态栏的距离
     headerHeight?: number;
     tabBarStyle?: ViewStyle;
@@ -224,10 +225,72 @@ export default class ScrollableTabView extends Component<Props> {
                         },
                     ],
                 }}>
+                {this.renderHeaderBg()}
                 {renderScrollHeader()}
             </Animated.View>
         );
     };
+    // 渲染可滑动背景图
+    renderHeaderBg = () => {
+        const { renderScrollHeader, headerHeight,renderScrollHeaderBg } = this.props;
+        const { containerOffsetY, containerWidth } = this.state;
+        if (!renderScrollHeader) return null;
+
+        return (
+            <View>
+            <Animated.Image
+                source={{ uri: renderScrollHeaderBg?.uri}}
+                style={{
+                    position: 'absolute',
+                    zIndex: 0,
+                    top: 0,
+                    width: containerWidth,
+                    height: headerHeight,
+                    transform: [
+                        {
+                            translateY: containerOffsetY.interpolate({
+                                inputRange: [-200, 0,255],
+                                outputRange: [-255/2, 0,0],
+                            }),
+                        },
+                        {
+                            scale: containerOffsetY.interpolate({
+                                inputRange: [-255, 0,255],
+                                outputRange: [2, 1,1],
+                            }),
+                        },
+                    ],
+                    ...renderScrollHeaderBg?.style
+                
+                }}>
+                </Animated.Image>
+                <Animated.View style={{
+                    position: 'absolute',
+                    zIndex: 0,
+                    top: 0,
+                    width: containerWidth,
+                    height: headerHeight,
+                    transform: [
+                        {
+                            translateY: containerOffsetY.interpolate({
+                                inputRange: [-200, 0, 255],
+                                outputRange: [-255 / 2, 0, 0],
+                            }),
+                        },
+                        {
+                            scale: containerOffsetY.interpolate({
+                                inputRange: [-255, 0, 255],
+                                outputRange: [2, 1, 1],
+                            }),
+                        },
+                    ],
+                    ...renderScrollHeaderBg?.style
+                }}>
+
+                </Animated.View>
+            </View>
+        );
+    };
 
     updateSceneKeys = ({ page, children = this.props.children, callback = () => {} }) => {
         let newKeys = this.newSceneKeys({ previousKeys: this.state.sceneKeys, currentPage: page, children });
diff --git a/node_modules/react-native-scroll-head-tab-view/components/TabView.tsx b/node_modules/react-native-scroll-head-tab-view/components/TabView.tsx
index 4dcd6de..f1ecdaf 100644
--- a/node_modules/react-native-scroll-head-tab-view/components/TabView.tsx
+++ b/node_modules/react-native-scroll-head-tab-view/components/TabView.tsx
@@ -26,13 +26,19 @@ const compose = (WrappedComponent) => {
             this.mounted = true;
             this.addListener();
         }
-
+        componentWillReceiveProps(nextProps, nextContext) {
+            if (nextProps.isActive != this.props.isActive) {
+                    this.scrollTo({ y: 0 })
+                    this.props.containerOffsetY.setValue(0)
+            }
+        }
         componentWillUnmount() {
             this.removeListener();
         }
 
         addListener() {
             const { containerOffsetY } = this.props;
+            containerOffsetY?.setValue(0)
             containerOffsetY?.addListener(this.tabViewScrollHandler);
         }
 
@@ -53,12 +59,12 @@ const compose = (WrappedComponent) => {
 
         // other TabView sync OffsetY
         tabViewScrollHandler = (e) => {
-            const { headerHeight, isActive } = this.props;
+            const { headerHeight, isActive, containerOffsetY, sceneHeight } = this.props;
             if (!isActive) {
-                if (e.value > headerHeight && this.scrollOffsetY < headerHeight) {
-                    this.scrollTo({ y: headerHeight });
+                if (e.value > headerHeight) {
+                    // this.scrollTo({ y: headerHeight });
                 } else {
-                    this.scrollTo({ y: e.value });
+                    // this.scrollTo({ y: e.value });
                 }
             }
         };
@@ -104,9 +110,9 @@ const compose = (WrappedComponent) => {
         });
 
         onScroll = (e) => {
+            this.props._onScroll && this.props._onScroll(e);
             this.scrollOffsetY = e.nativeEvent.contentOffset.y;
         };
-
         render() {
             const { isActive, children, headerHeight, forwardedRef, contentContainerStyle, ...restProps } = this.props;
             const { bottomPadding } = this.state;
@@ -128,7 +134,7 @@ const compose = (WrappedComponent) => {
                     contentContainerStyle={{
                         ...contentContainerStyle,
                         paddingTop: headerHeight,
-                        paddingBottom: bottomPadding,
+                        paddingBottom: bottomPadding||0,
                     }}
                     overScrollMode="never"
                     scrollEventThrottle={16}
