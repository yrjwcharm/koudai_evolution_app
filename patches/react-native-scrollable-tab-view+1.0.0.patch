diff --git a/node_modules/react-native-scrollable-tab-view/index.js b/node_modules/react-native-scrollable-tab-view/index.js
index 82e53c5..7cb2eda 100644
--- a/node_modules/react-native-scrollable-tab-view/index.js
+++ b/node_modules/react-native-scrollable-tab-view/index.js
@@ -73,7 +73,7 @@ const ScrollableTabView = createReactClass({
     let positionAndroid;
     let offsetAndroid;
 
-    if (Platform.OS === 'ios') {
+    // if (Platform.OS === 'ios') {
       scrollXIOS = new Animated.Value(this.props.initialPage * containerWidth);
       const containerWidthAnimatedValue = new Animated.Value(containerWidth);
       // Need to call __makeNative manually to avoid a native animated bug. See
@@ -85,23 +85,23 @@ const ScrollableTabView = createReactClass({
       scrollXIOS.addListener(
         ({ value, }) => callListeners(value / this.state.containerWidth)
       );
-    } else {
-      positionAndroid = new Animated.Value(this.props.initialPage);
-      offsetAndroid = new Animated.Value(0);
-      scrollValue = Animated.add(positionAndroid, offsetAndroid);
-
-      const callListeners = this._polyfillAnimatedValue(scrollValue);
-      let positionAndroidValue = this.props.initialPage;
-      let offsetAndroidValue = 0;
-      positionAndroid.addListener(({ value, }) => {
-        positionAndroidValue = value;
-        callListeners(positionAndroidValue + offsetAndroidValue);
-      });
-      offsetAndroid.addListener(({ value, }) => {
-        offsetAndroidValue = value;
-        callListeners(positionAndroidValue + offsetAndroidValue);
-      });
-    }
+    // } else {
+    //   positionAndroid = new Animated.Value(this.props.initialPage);
+    //   offsetAndroid = new Animated.Value(0);
+    //   scrollValue = Animated.add(positionAndroid, offsetAndroid);
+
+    //   const callListeners = this._polyfillAnimatedValue(scrollValue);
+    //   let positionAndroidValue = this.props.initialPage;
+    //   let offsetAndroidValue = 0;
+    //   positionAndroid.addListener(({ value, }) => {
+    //     positionAndroidValue = value;
+    //     callListeners(positionAndroidValue + offsetAndroidValue);
+    //   });
+    //   offsetAndroid.addListener(({ value, }) => {
+    //     offsetAndroidValue = value;
+    //     callListeners(positionAndroidValue + offsetAndroidValue);
+    //   });
+    // }
 
     return {
       currentPage: this.props.initialPage,
@@ -125,29 +125,29 @@ const ScrollableTabView = createReactClass({
   },
 
   componentWillUnmount() {
-    if (Platform.OS === 'ios') {
+    // if (Platform.OS === 'ios') {
       this.state.scrollXIOS.removeAllListeners();
-    } else {
-      this.state.positionAndroid.removeAllListeners();
-      this.state.offsetAndroid.removeAllListeners();
-    }
+    // } else {
+    //   this.state.positionAndroid.removeAllListeners();
+    //   this.state.offsetAndroid.removeAllListeners();
+    // }
   },
 
   goToPage(pageNumber) {
-    if (Platform.OS === 'ios') {
+    // if (Platform.OS === 'ios') {
       const offset = pageNumber * this.state.containerWidth;
       if (this.scrollView) {
         this.scrollView.getNode().scrollTo({x: offset, y: 0, animated: !this.props.scrollWithoutAnimation, });
       }
-    } else {
-      if (this.scrollView) {
-        if (this.props.scrollWithoutAnimation) {
-          this.scrollView.getNode().setPageWithoutAnimation(pageNumber);
-        } else {
-          this.scrollView.getNode().setPage(pageNumber);
-        }
-      }
-    }
+    // } else {
+    //   if (this.scrollView) {
+    //     if (this.props.scrollWithoutAnimation) {
+    //       this.scrollView.getNode().setPageWithoutAnimation(pageNumber);
+    //     } else {
+    //       this.scrollView.getNode().setPage(pageNumber);
+    //     }
+    //   }
+    // }
 
     const currentPage = this.state.currentPage;
     this.updateSceneKeys({
@@ -223,7 +223,7 @@ const ScrollableTabView = createReactClass({
   },
 
   renderScrollableContent() {
-    if (Platform.OS === 'ios') {
+    // if (Platform.OS === 'ios') {
       const scenes = this._composeScenes();
       return <Animated.ScrollView
         horizontal
@@ -248,33 +248,34 @@ const ScrollableTabView = createReactClass({
       >
           {scenes}
       </Animated.ScrollView>;
-    } else {
-      const scenes = this._composeScenes();
-      return <AnimatedViewPagerAndroid
-        key={this._children().length}
-        style={styles.scrollableContentAndroid}
-        initialPage={this.props.initialPage}
-        onPageSelected={this._updateSelectedPage}
-        keyboardDismissMode="on-drag"
-        scrollEnabled={!this.props.locked}
-        onPageScroll={Animated.event(
-          [{
-            nativeEvent: {
-              position: this.state.positionAndroid,
-              offset: this.state.offsetAndroid,
-            },
-          }, ],
-          {
-            useNativeDriver: true,
-            listener: this._onScroll,
-          },
-        )}
-        ref={(scrollView) => { this.scrollView = scrollView; }}
-        {...this.props.contentProps}
-      >
-        {scenes}
-      </AnimatedViewPagerAndroid>;
-    }
+    // } 
+    // else {
+    //   const scenes = this._composeScenes();
+    //   return <AnimatedViewPagerAndroid
+    //     key={this._children().length}
+    //     style={styles.scrollableContentAndroid}
+    //     initialPage={this.props.initialPage}
+    //     onPageSelected={this._updateSelectedPage}
+    //     keyboardDismissMode="on-drag"
+    //     scrollEnabled={!this.props.locked}
+    //     onPageScroll={Animated.event(
+    //       [{
+    //         nativeEvent: {
+    //           position: this.state.positionAndroid,
+    //           offset: this.state.offsetAndroid,
+    //         },
+    //       }, ],
+    //       {
+    //         useNativeDriver: true,
+    //         listener: this._onScroll,
+    //       },
+    //     )}
+    //     ref={(scrollView) => { this.scrollView = scrollView; }}
+    //     {...this.props.contentProps}
+    //   >
+    //     {scenes}
+    //   </AnimatedViewPagerAndroid>;
+    // }
   },
 
   _composeScenes() {
@@ -320,17 +321,17 @@ const ScrollableTabView = createReactClass({
   },
 
   _onScroll(e) {
-    if (Platform.OS === 'ios') {
+    // if (Platform.OS === 'ios') {
       const offsetX = e.nativeEvent.contentOffset.x;
       if (offsetX === 0 && !this.scrollOnMountCalled) {
         this.scrollOnMountCalled = true;
       } else {
         this.props.onScroll(offsetX / this.state.containerWidth);
       }
-    } else {
-      const { position, offset, } = e.nativeEvent;
-      this.props.onScroll(position + offset);
-    }
+    // } else {
+    //   const { position, offset, } = e.nativeEvent;
+    //   this.props.onScroll(position + offset);
+    // }
   },
 
   _handleLayout(e) {
@@ -340,16 +341,17 @@ const ScrollableTabView = createReactClass({
       return;
     }
     
-    if (Platform.OS === 'ios') {
+    // if (Platform.OS === 'ios') {
       const containerWidthAnimatedValue = new Animated.Value(width);
       // Need to call __makeNative manually to avoid a native animated bug. See
       // https://github.com/facebook/react-native/pull/14435
       containerWidthAnimatedValue.__makeNative();
       scrollValue = Animated.divide(this.state.scrollXIOS, containerWidthAnimatedValue);
       this.setState({ containerWidth: width, scrollValue, });
-    } else {
-      this.setState({ containerWidth: width, });
-    }
+    // } 
+    // else {
+    //   this.setState({ containerWidth: width, });
+    // }
     this.requestAnimationFrame(() => {
       this.goToPage(this.state.currentPage);
     });
